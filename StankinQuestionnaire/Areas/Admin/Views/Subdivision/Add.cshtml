@using StankinQuestionnaire.Web.Core.Status
@model StankinQuestionnaire.Areas.Admin.Models.SubdivisionEditModel
@{
    ViewBag.Title = "Добавление подразделения";
}
@Html.GetStatus()
@using (Html.BeginForm("Add", "Subdivision", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal" }))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Введите название" } })
            @Html.ValidationMessageFor(m => m.Name, null, new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.EditorFor(m => m.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Введите опиание" } })
            @Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Users, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.DropDownListFor(m => m.UsersID, Model.Users, new { @class = "form-control", multiple = "multiple" })
            @Html.ValidationMessageFor(m => m.Users, null, new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <a href="@Url.Action("Index")" class="btn btn-danger">
                <span class="glyphicon glyphicon-remove"></span> Отмена
            </a>
            <button type="submit" class="btn btn-success">
                <span class="glyphicon glyphicon-ok aria-hidden=" true">
                </span> Сохранить
            </button>
        </div>
    </div>
}